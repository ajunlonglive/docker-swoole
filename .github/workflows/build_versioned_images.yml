name: Build Versioned Images

on:
  push:
    branches:
      - '[4-9].[0-9]+.[0-9]+'
      - '[4-9].[0-9]+.[0-9]+-?[a-zA-Z]**'

jobs:
  build_versioned_images:
    runs-on: ubuntu-latest
    if: github.repository == 'swoole/docker-swoole'
    strategy:
      fail-fast: true
      matrix:
        php: ["8.0", "8.1", "8.2"]

    name: The image for PHP ${{ matrix.php }}

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Set output parameters
        id: params
        run: |
          set -ex

          echo "branch_name=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          branch_name=${GITHUB_REF##*/}
          if egrep -q '^status\:\s*"under development"\s*($|\#)' "$(pwd)/config/${branch_name}.yml" ; then
            major_version=${branch_name%.*}
            if [ ${{ matrix.php }} == '8.1' ] ; then
              if [ ${major_version} == '5.0' ] ; then
                echo "image_type=latest" >> $GITHUB_OUTPUT
              else
                echo "image_type=major" >> $GITHUB_OUTPUT
              fi
            else
              echo "image_type=default" >> $GITHUB_OUTPUT
            fi
          else
            echo "released_already=true" >> $GITHUB_OUTPUT
          fi

      -
        name: Build and push Docker image phpswoole/swoole:${{ steps.params.outputs.branch_name }}-php${{ matrix.php }} (${{ steps.params.outputs.image_type }})
        if: steps.params.outputs.released_already != 'true' && steps.params.outputs.image_type == 'latest'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dockerfiles/${{ steps.params.outputs.branch_name }}/php${{ matrix.php }}/cli/Dockerfile
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le
          push: true
          tags: |
            phpswoole/swoole:${branch_name}-php${{ matrix.php }}
            phpswoole/swoole:${major_version}-php${{ matrix.php }}
            phpswoole/swoole:${major_version}
            phpswoole/swoole:latest

      -
        name: Build and push Docker image phpswoole/swoole:${{ steps.params.outputs.branch_name }}-php${{ matrix.php }} (${{ steps.params.outputs.image_type }})
        if: steps.params.outputs.released_already != 'true' && steps.params.outputs.image_type == 'major'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dockerfiles/${{ steps.params.outputs.branch_name }}/php${{ matrix.php }}/cli/Dockerfile
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le
          push: true
          tags: |
            phpswoole/swoole:${branch_name}-php${{ matrix.php }}
            phpswoole/swoole:${major_version}-php${{ matrix.php }}
            phpswoole/swoole:${major_version}

      -
        name: Build and push Docker image phpswoole/swoole:${{ steps.params.outputs.branch_name }}-php${{ matrix.php }} (${{ steps.params.outputs.image_type }})
        if: steps.params.outputs.released_already != 'true' && steps.params.outputs.image_type == 'default'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dockerfiles/${{ steps.params.outputs.branch_name }}/php${{ matrix.php }}/cli/Dockerfile
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le
          push: true
          tags: |
            phpswoole/swoole:${branch_name}-php${{ matrix.php }}
            phpswoole/swoole:${major_version}-php${{ matrix.php }}
